<Activity mc:Ignorable="sap sap2010" x:Class="VAL_API_RetrieveRating" this:VAL_API_RetrieveRating.in_ValenUsername="jbrown.test@hastingsmutual.com" this:VAL_API_RetrieveRating.in_ValenPassword="[new System.Net.NetworkCredential(&quot;&quot;, &quot;V@lenTestUser1&quot;).SecurePassword]" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:ss="clr-namespace:System.Security;assembly=mscorlib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_TransactionItem" Type="InArgument(ui:QueueItem)" />
    <x:Property Name="out_ReportID" Type="OutArgument(x:String)" />
    <x:Property Name="in_ValenUsername" Type="InArgument(x:String)" />
    <x:Property Name="in_ValenPassword" Type="InArgument(ss:SecureString)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>898,4180</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>VAL_API_RetrieveRating_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="25">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Security</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Net</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="40">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldExpandAll">True</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <Sequence DisplayName="VAL_API_RetrieveRating" sap:VirtualizedContainerService.HintSize="878,4120" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="scoreResult" />
      <Variable x:TypeArguments="x:Int32" Name="scoreStatusCode" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="scoreHeader" />
      <Variable x:TypeArguments="x:String" Name="agencyID" />
      <Variable x:TypeArguments="x:String" Name="policyReference" />
      <Variable x:TypeArguments="x:String" Name="policyEffectiveDate" />
      <Variable x:TypeArguments="x:String" Name="address" />
      <Variable x:TypeArguments="x:String" Name="city" />
      <Variable x:TypeArguments="x:String" Name="state" />
      <Variable x:TypeArguments="x:String" Name="zip" />
      <Variable x:TypeArguments="x:String" Name="classCodes" />
      <Variable x:TypeArguments="x:String" Name="mods" />
      <Variable x:TypeArguments="x:String" Name="underwriter" />
      <Variable x:TypeArguments="njl:JObject" Name="postResult" />
      <Variable x:TypeArguments="njl:JArray" Name="postResultArray" />
      <Variable x:TypeArguments="njl:JObject" Name="jsonScoreObj" />
      <Variable x:TypeArguments="x:String" Name="name" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="836,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Trace" Message="[&quot;Start Valen Score Transaction&quot;]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:LogMessage>
    <TryCatch DisplayName="Try to Score Policy (API)" sap:VirtualizedContainerService.HintSize="836,3762.66666666667" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <TryCatch.Try>
        <Sequence DisplayName="Score Policy" sap:VirtualizedContainerService.HintSize="422,1546" sap2010:WorkflowViewState.IdRef="Sequence_6">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence DisplayName="Parse Policy Info" sap:VirtualizedContainerService.HintSize="380,702" sap2010:WorkflowViewState.IdRef="Sequence_3">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="338,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Trace" Message="[CDate(in_TransactionItem.SpecificContent(&quot;PolicyEffectiveDate&quot;).ToString).ToString(&quot;yyyy-MM-dd&quot;)]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:LogMessage>
            <Assign sap:VirtualizedContainerService.HintSize="338,62" sap2010:WorkflowViewState.IdRef="Assign_9">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[name]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[If(String.IsNullOrEmpty(in_TransactionItem.SpecificContent("PrimaryNamedInsured").ToString),String.empty,in_TransactionItem.SpecificContent("PrimaryNamedInsured").ToString)]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="338,373.333333333333" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
              <ui:MultipleAssign.AssignOperations>
                <scg:List x:TypeArguments="ui:AssignOperation" Capacity="16">
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[policyReference]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[in_TransactionItem.SpecificContent("PolicyReference").ToString]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[policyEffectiveDate]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[Cdate(in_TransactionItem.SpecificContent("PolicyEffectiveDate").ToString).ToString("yyyy-MM-dd")]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[address]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[in_TransactionItem.SpecificContent("Address").ToString]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[city]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[in_TransactionItem.SpecificContent("City").ToString]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[state]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[in_TransactionItem.SpecificContent("State").ToString]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_7">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[zip]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[in_TransactionItem.SpecificContent("Zip").ToString]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_8">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[classCodes]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[in_TransactionItem.SpecificContent("ClassCodes").ToString.Replace("\","")]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_9">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[mods]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[in_TransactionItem.SpecificContent("Mods").ToString.Replace("\","")]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_10">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[agencyID]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[in_TransactionItem.SpecificContent("AgencyID").ToString]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_11">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[underwriter]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[in_TransactionItem.SpecificContent("Underwriter").ToString]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                </scg:List>
              </ui:MultipleAssign.AssignOperations>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:MultipleAssign>
          </Sequence>
          <Assign sap:VirtualizedContainerService.HintSize="380,62" sap2010:WorkflowViewState.IdRef="Assign_8">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[policyReference]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[policyReference.padleft(10,CChar(“0”))]</InArgument>
            </Assign.Value>
          </Assign>
          <Sequence DisplayName="TEMP - Adjust Json Headers in queue" sap:VirtualizedContainerService.HintSize="380,256" sap2010:WorkflowViewState.IdRef="Sequence_4">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_2">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[mods]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[mods.Replace("StateCode","state_code").Replace("EMod","experience_mod_factor_initial").Replace("MMod","merit_mod_factor_initial")]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_3">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[classCodes]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[classCodes.Replace("ClassCode","class_code").Replace("Payroll","payroll_amount_initial").Replace("StateCode","state_code")]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
          <ui:HttpClient ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" ResourcePath="{x:Null}" AcceptFormat="JSON" Body="[&quot;{&quot;&quot;score&quot;&quot;: {&quot;&quot;inputs&quot;&quot;: { &quot;&quot;insured&quot;&quot;: {&quot;&quot;agency&quot;&quot;: &quot;&quot;&quot; + agencyID + &quot;&quot;&quot;,&quot;&quot;available_history_1&quot;&quot;: &quot;&quot;N&quot;&quot;,&quot;&quot;available_history_2&quot;&quot;: &quot;&quot;N&quot;&quot;,&quot;&quot;available_history_3&quot;&quot;: &quot;&quot;N&quot;&quot;,&quot;&quot;insured_name&quot;&quot;: &quot;&quot;&quot; + name + &quot;&quot;&quot;,&quot;&quot;new_renew_flag&quot;&quot;: &quot;&quot;N&quot;&quot;, &quot;&quot;original_policy_term_number&quot;&quot;: &quot;&quot;&quot; + policyReference + &quot;&quot;&quot;,&quot;&quot;policy_address&quot;&quot;: &quot;&quot;&quot; + address + &quot;&quot;&quot;,&quot;&quot;policy_city_name&quot;&quot;: &quot;&quot;&quot; + city + &quot;&quot;&quot;,&quot;&quot;policy_state_code&quot;&quot;: &quot;&quot;&quot; + state + &quot;&quot;&quot;,&quot;&quot;policy_zip_code&quot;&quot;: &quot;&quot;&quot; + zip + &quot;&quot;&quot;,&quot;&quot;term_effective_date&quot;&quot;: &quot;&quot;&quot;+ policyEffectiveDate + &quot;&quot;&quot;,&quot;&quot;underwriter&quot;&quot;: &quot;&quot;&quot; + underwriter + &quot;&quot;&quot;,&quot;&quot;class&quot;&quot;: &quot; + classCodes + &quot;,&quot;&quot;state&quot;&quot;: &quot; + mods + &quot; }}}}&quot;]" BodyFormat="application/json" ClientCertificate="[Nothing]" ClientCertificatePassword="[Nothing]" DisplayName="HTTP Request - Scoring" EndPoint="https://insureright.valen.com/api/2/document/insureright/scoring" sap:VirtualizedContainerService.HintSize="380,22" sap2010:WorkflowViewState.IdRef="HttpClient_1" Method="POST" Password="[new System.Net.NetworkCredential(string.Empty, in_ValenPassword).Password]" ResponseHeaders="[scoreHeader]" Result="[scoreResult]" StatusCode="[scoreStatusCode]" TimeoutMS="6000" Username="[in_ValenUsername]">
            <ui:HttpClient.Attachments>
              <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
            </ui:HttpClient.Attachments>
            <ui:HttpClient.Cookies>
              <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
            </ui:HttpClient.Cookies>
            <ui:HttpClient.Headers>
              <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
            </ui:HttpClient.Headers>
            <ui:HttpClient.Parameters>
              <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
            </ui:HttpClient.Parameters>
            <ui:HttpClient.UrlSegments>
              <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
            </ui:HttpClient.UrlSegments>
          </ui:HttpClient>
          <Sequence DisplayName="Parse Scoring Response" sap:VirtualizedContainerService.HintSize="380,252" sap2010:WorkflowViewState.IdRef="Sequence_5">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_4">
              <Assign.To>
                <OutArgument x:TypeArguments="njl:JObject">[jsonScoreObj]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="njl:JObject">[JsonConvert.DeserializeObject(Of JObject)(scoreResult)]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_5">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[out_ReportID]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[jsonScoreObj.Item("info").item("score_id").ToString]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="801,314" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Catch Scoring Error" sap:VirtualizedContainerService.HintSize="376,245" sap2010:WorkflowViewState.IdRef="Sequence_7">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Error" Message="[&quot;Error Scoring Policy: &quot; + exception.Message]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:LogMessage>
              <Throw Exception="[new BusinessRuleException(&quot;Error Scoring Policy: &quot; + exception.Message)]" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Throw_1" />
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
      <TryCatch.Finally>
        <Sequence sap:VirtualizedContainerService.HintSize="797,1643" sap2010:WorkflowViewState.IdRef="Sequence_11">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If Condition="[scoreStatusCode &lt;&gt; 200]" DisplayName="If Failed Status Code" sap:VirtualizedContainerService.HintSize="755,685" sap2010:WorkflowViewState.IdRef="If_2">
            <If.Then>
              <Sequence DisplayName="Status Code Retry Sequence" sap:VirtualizedContainerService.HintSize="376,537" sap2010:WorkflowViewState.IdRef="Sequence_10">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:LogMessage DisplayName="Status Code Retry Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Warn" Message="[&quot;Scoring Retry: Failed Status Code # &quot;+scoreStatusCode.ToString]" />
                <ui:HttpClient ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" ResourcePath="{x:Null}" AcceptFormat="JSON" Body="[&quot;{&quot;&quot;score&quot;&quot;: {&quot;&quot;inputs&quot;&quot;: { &quot;&quot;insured&quot;&quot;: {&quot;&quot;agency&quot;&quot;: &quot;&quot;&quot; + agencyID + &quot;&quot;&quot;,&quot;&quot;available_history_1&quot;&quot;: &quot;&quot;N&quot;&quot;,&quot;&quot;available_history_2&quot;&quot;: &quot;&quot;N&quot;&quot;,&quot;&quot;available_history_3&quot;&quot;: &quot;&quot;N&quot;&quot;,&quot;&quot;insured_name&quot;&quot;: &quot;&quot;&quot; + name + &quot;&quot;&quot;,&quot;&quot;new_renew_flag&quot;&quot;: &quot;&quot;N&quot;&quot;, &quot;&quot;original_policy_term_number&quot;&quot;: &quot;&quot;&quot; + policyReference + &quot;&quot;&quot;,&quot;&quot;policy_address&quot;&quot;: &quot;&quot;&quot; + address + &quot;&quot;&quot;,&quot;&quot;policy_city_name&quot;&quot;: &quot;&quot;&quot; + city + &quot;&quot;&quot;,&quot;&quot;policy_state_code&quot;&quot;: &quot;&quot;&quot; + state + &quot;&quot;&quot;,&quot;&quot;policy_zip_code&quot;&quot;: &quot;&quot;&quot; + zip + &quot;&quot;&quot;,&quot;&quot;term_effective_date&quot;&quot;: &quot;&quot;&quot;+ policyEffectiveDate + &quot;&quot;&quot;,&quot;&quot;underwriter&quot;&quot;: &quot;&quot;&quot; + underwriter + &quot;&quot;&quot;,&quot;&quot;class&quot;&quot;: &quot; + classCodes + &quot;,&quot;&quot;state&quot;&quot;: &quot; + mods + &quot; }}}}&quot;]" BodyFormat="application/json" ClientCertificate="[Nothing]" ClientCertificatePassword="[Nothing]" DisplayName="HTTP Request - Scoring" EndPoint="https://insureright.valen.com/api/2/document/insureright/scoring" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="HttpClient_2" Method="POST" Password="[new System.Net.NetworkCredential(string.Empty, in_ValenPassword).Password]" ResponseHeaders="[scoreHeader]" Result="[scoreResult]" StatusCode="[scoreStatusCode]" TimeoutMS="6000" Username="[in_ValenUsername]">
                  <ui:HttpClient.Attachments>
                    <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                  </ui:HttpClient.Attachments>
                  <ui:HttpClient.Cookies>
                    <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                  </ui:HttpClient.Cookies>
                  <ui:HttpClient.Headers>
                    <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                  </ui:HttpClient.Headers>
                  <ui:HttpClient.Parameters>
                    <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                  </ui:HttpClient.Parameters>
                  <ui:HttpClient.UrlSegments>
                    <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                  </ui:HttpClient.UrlSegments>
                </ui:HttpClient>
                <Sequence DisplayName="Parse Scoring Response" sap:VirtualizedContainerService.HintSize="334,252" sap2010:WorkflowViewState.IdRef="Sequence_9">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_6">
                    <Assign.To>
                      <OutArgument x:TypeArguments="njl:JObject">[jsonScoreObj]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="njl:JObject">[JsonConvert.DeserializeObject(Of JObject)(scoreResult)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_7">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[out_ReportID]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[jsonScoreObj.Item("info").item("score_id").ToString]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </Sequence>
            </If.Then>
          </If>
          <If Condition="[(scoreStatusCode = 401) Or (scoreStatusCode = 403)]" sap:VirtualizedContainerService.HintSize="755,393" sap2010:WorkflowViewState.IdRef="If_3">
            <If.Then>
              <Sequence sap:VirtualizedContainerService.HintSize="376,245" sap2010:WorkflowViewState.IdRef="Sequence_12">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Fatal" Message="[&quot;InsureRight returned an UNSUCCESSFUL status code: &quot; + scoreStatusCode.ToString + &quot; | Incorrect Credentials&quot;]">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:LogMessage>
                <Throw Exception="[new SystemException(&quot;Incorrrect Valen Credentials.&quot;)]" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Throw_3" />
              </Sequence>
            </If.Then>
          </If>
          <If Condition="[scoreStatusCode &lt;&gt; 200]" DisplayName="If Status Code is not Successful" sap:VirtualizedContainerService.HintSize="755,393" sap2010:WorkflowViewState.IdRef="If_1">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Sequence DisplayName="Unsuccessful Status Code" sap:VirtualizedContainerService.HintSize="376,245" sap2010:WorkflowViewState.IdRef="Sequence_8">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Error" Message="[&quot;InsureRight returned an UNSUCCESSFUL status code: &quot; + scoreStatusCode.ToString]">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:LogMessage>
                <Throw Exception="[new BusinessRuleException(&quot;InsureRight returned an UNSUCCESSFUL status code: &quot; + scoreStatusCode.ToString)]" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Throw_2" />
              </Sequence>
            </If.Then>
            <If.Else>
              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Trace" Message="[&quot;InsureRight returned an SUCCESSFUL status code: &quot; + scoreStatusCode.ToString]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:LogMessage>
            </If.Else>
          </If>
        </Sequence>
      </TryCatch.Finally>
    </TryCatch>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="835,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Trace" Message="[&quot;End Valen Score Transaction&quot;]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:LogMessage>
  </Sequence>
</Activity>